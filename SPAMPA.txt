spa

メリット
・高速なページ遷移
→あるデータにフルアクセスするのは初回のみで次回からは前回との差分のみ取得する。(仮想DOMによる機能 vue.jsもできるらしい)
　ユーザーがブラウザ上で操作した場合にMPAと挙動は変わらないが、そもそもページ遷移は発生していない。(URLも一つ、ソースも複数のファイルをバンドルしてある。)

・同一ページ内での挙動が比較的自由
→1画面の中で今までページ遷移によって実現していたサービスを再現できる。

・
デメリット
・実装コストの増加
・初回はフルアクセスを行うためロードに時間が掛かる。
　MPAだとサーバでやっていた処理をブラウザ側に寄せるのでMPAより時間が掛かるらしい
・開発者が少ない
→SPAという概念を用いての開発は学習コストが高い。React自体が従来のjavascriptとは違うコーディング方法のため
　エンジニアの立ち上げに時間が掛かるのでは
　ただ所感としてはフロントエンドに明るい人間がそもそもいないようなので、MPAでも同じことな気がする
　またメリットに挙げた高速なページ遷移も適切なSPAでのチューニングがあってこそであり、逆にサーバー側で
　処理したほうが、早いなんてことも起こり得る。
　
　またMPAの場合はとりあえずそれぞれの画面さえ作れば、ボタンなどにリンクを張るだけで全体の構築が可能と
　思われるが、SPAの場合それぞれの画面をJSで作成後、URL、ページ遷移(どちらも疑似的なもの)のための処理を
　実装しなければならない
　
まとめ
これはメリットでもありデメリットでもありそうだが、SPAはフロントエンドに画面に関する処理を寄せることになるので
サーバーとの通信は最小限にとどめられるが、フロントエンド側の負担はその分増す。
またSPAは一般的にユーザーが頻繁にページ遷移や操作を行うサービスに適しており
TOPSというサービスにおいては適しているのではないか





